// Gera chave √∫nica para cada conversa
export function gerarChaveChat(usuario1, usuario2) {
  const ordenados = [usuario1, usuario2].sort();
  return `chat_${ordenados[0]}_${ordenados[1]}`;
}

// Formata valores para moeda Kz
export function formatarValor(valor) {
  return Number(valor).toLocaleString('pt-AO', {
    style: 'currency',
    currency: 'AOA',
    minimumFractionDigits: 0
  }).replace('AOA', 'Kz');
}

// Envia mensagem autom√°tica com base nos dados da compra
export function enviarMensagemCompraAutomatica({
  cliente,
  vendedor,
  itensComprados = [],
  entregador = null,
  setChatState
}) {
  if (!cliente?.nome || !vendedor?.nome || itensComprados.length === 0) return;

  const chatKey = gerarChaveChat(cliente.nome, vendedor.nome);

  const listaProdutos = itensComprados.map(
    item => `‚Ä¢ ${item.nome} ‚Äî ${item.quantidade} x ${formatarValor(item.preco)} = ${formatarValor(item.total)}`
  ).join('\n');

  const dadosEntrega = entregador
    ? `
üöö Solicitei entrega com os seguintes dados:
‚Ä¢ Entregador: ${entregador.nome}
‚Ä¢ Ve√≠culo: ${entregador.veiculo}
‚Ä¢ Localiza√ß√£o: ${entregador.localizacao}
‚Ä¢ Tarifa: ${formatarValor(entregador.tarifa)}
‚Ä¢ Pagamento: ${entregador.pagamento}
‚Ä¢ Contacto: ${entregador.contacto}`
    : '';

  const mensagem = `
Ol√°! Sou o(a) cliente *${cliente.nome}*. Acabei de comprar os seus produtos no Mercado Yangue:

${listaProdutos}

üßæ Gostaria de receber a factura da compra.

‚ùó Caso n√£o tenha como emitir, por favor envie uma c√≥pia do seu BI para podermos fazer a autofactura√ß√£o.${dadosEntrega}

Muito obrigado pela aten√ß√£o e colabora√ß√£o. üòä
`.trim();

  const novaMensagem = {
    id: Date.now(),
    texto: mensagem,
    remetente: cliente.nome,
    destinatario: vendedor.nome,
    tipo: 'texto',
    ficheiro: null,
    data: new Date().toISOString(),
    lida: false,
    automatica: true
  };

  try {
    const chatState = JSON.parse(localStorage.getItem('chatState')) || {};
    const mensagensAnteriores = chatState[chatKey] || [];

    const novoEstado = {
      ...chatState,
      [chatKey]: [...mensagensAnteriores, novaMensagem]
    };

    localStorage.setItem('chatState', JSON.stringify(novoEstado));

    if (setChatState) setChatState(novoEstado);

    // Notifica√ß√µes
    const notificacoes = JSON.parse(localStorage.getItem('notificacoesChat') || '{}');
    notificacoes[chatKey] = (notificacoes[chatKey] || 0) + 1;
    localStorage.setItem('notificacoesChat', JSON.stringify(notificacoes));

  } catch (erro) {
    console.error('Erro ao enviar mensagem autom√°tica:', erro);
  }
}
